 Uma aplicação web acessível via navegador.
 O aplicativo deve utilizar uma API de WhatsApp para o envio das mensagens. A escolha da API será feita com base em pesquisa e análise de mercado, buscando a melhor opção em termos de estabilidade, recursos e custo-benefício.

3. Requisitos de Funcionalidade
O aplicativo deve conter os seguintes componentes de tela e funcionalidades:
Home um-page que mostra tudo e as seguites seçoes:
3.1. Configuração da API
 * Campos de entrada para as credenciais e o endpoint da API de mensagens de WhatsApp.
 * Validação dos dados de entrada para garantir a conexão correta.
3.2. Gerenciamento de Contatos
 * Campo de Texto para Telefones: Um campo de múltiplas linhas onde o usuário poderá inserir uma lista de telefones, com cada telefone em uma nova linha.
 * Formato do Telefone: Os telefones devem ser inseridos no formato E.164 (ex.: 5511988778877).
 * Variáveis Personalizadas: Suporte para até duas variáveis por linha, separadas por vírgula. Exemplo: 5511988778877,João,amigo. As variáveis serão identificadas como {nome} e {outro}.
3.3. Composição da Mensagem
 * Campo de Texto para Mensagem: Um campo de múltiplas linhas para que o usuário insira o texto da mensagem.
 * Substituição de Variáveis: O sistema deve substituir as variáveis {nome} e {outro} no texto da mensagem pelos valores correspondentes inseridos na lista de telefones.
3.4. Controle de Envio
 * Intervalo de Tempo: Uma opção de escolha que permite ao usuário definir o tempo máximo de espera entre os envios de mensagens. O tempo mínimo será 5 segundos e o máximo 60 segundos. O intervalo de tempo para cada envio subsequente deve ser aleatório dentro da faixa selecionada.
 * Botão de Envio de Teste: Um botão que dispara uma mensagem de teste para um número específico, permitindo ao usuário verificar a conexão e o formato da mensagem antes do envio em massa.
 * Botão de Pausa: Um botão que permite pausar o processo de envio.
 * Botão de Cancelamento Total: Um botão que encerra completamente a fila de envios em andamento.
3.5. Feedback e Monitoramento
 * Campo de Logs: Uma área na interface que exibe o status de cada envio, incluindo mensagens de sucesso, falhas e possíveis erros (como telefone inválido, erro na API, etc.). O log deve ser atualizado em tempo real.
*adicione os campos acompanha desempenho da semana, do semestre do ano 
3.6. Assinatura do Autor
 * A interface deve incluir um campo estático que exibe a assinatura do autor: Ricardo França. Empresário, investidor e mentor.
4. Requisitos de Usabilidade e Detalhes
 * Mecanismo de Ajuda: Cada campo de entrada e botão principal da interface deve ter um mecanismo de ajuda, como um popup ou um tooltip, que forneça instruções claras sobre como operar ou configurar aquele componente.
 * Validação de Dados: O sistema deve validar os dados inseridos (telefones, credenciais da API) para prevenir erros de execução.



Layaout e template 
tabalhe apenas com o funco azul escuro e laranja mais para uma imagen de cidade iluminada e conectada mas deixe os elementos sobre um funco cinza meio transparente e as letras em uma fonte limpa e moderna mas de facio leitura e compreençao. 

utilize de python, html, js e bootstrap para fazer isso se necessario troque o js  entregue tudo funcionando 
